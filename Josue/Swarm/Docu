# Docker Swarm

Swarm es el gestor de cluster integrado con Docker engine.

### Importante:
Para poder utilizar el routing mesh en docker es necesario crear unas reglas para permitir los puertos que utiliza docker swarm.
- 2377/TCP: es para la comunicación del administrador del swarm.
- 7946/TCP+UDP: para descubrimiento de red de contenedores
- 4789/UDP: Para la red ingress que utiliza docker swarm
- 50: solo es necesario si habilita la seguridad en una red superpuesta
```
iptables -A INPUT -p tcp -m tcp --dport 2377 -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 7946 -j ACCEPT
iptables -A INPUT -p udp -m udp --dport 7946 -j ACCEPT
iptables -A INPUT -p tcp -m udp --dport 4789 -j ACCEPT
iptables -A INPUT -p 50 -j ACCEPT
```
He añadido en los servidores en /etc/hosts:
```
<ip> manager01
<ip> worker01
```
Luego iniciamos el cluster en el nodo manager01:
```
docker swarm init --advertise-addr <ip>
```
En los otros nodos entramos al cluster haciendo:
```
docker swarm join --token <TOKEN>
```

### Bibliografía

Caracteristicas de swarm: https://docs.docker.com/engine/swarm/

Como trabajan los nodos: https://docs.docker.com/engine/swarm/how-swarm-mode-works/nodes/

Balanceador de swarm:
https://docs.docker.com/engine/swarm/ingress

https://docs.docker.com/engine/swarm/stack-deploy/
https://github.com/traskiloner/drupal-microservices/blob/master/swarm-compose.yml 
https://hub.docker.com/_/varnish
https://github.com/webkul/magento2-varnish-docker-compose
https://github.com/fiunchinho/http-caching-training/blob/master/varnish/docker-compose.yml
https://serverfault.com/questions/986273/docker-swarm-routing-mesh-times-out

